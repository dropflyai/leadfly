"use strict";(()=>{var e={};e.id=907,e.ids=[907],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},2037:e=>{e.exports=require("os")},1017:e=>{e.exports=require("path")},4577:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},9256:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>I,originalPathname:()=>A,patchFetch:()=>T,requestAsyncStorage:()=>w,routeModule:()=>y,serverHooks:()=>O,staticGenerationAsyncStorage:()=>b,staticGenerationBailout:()=>N});var o={};r.r(o),r.d(o,{OPTIONS:()=>D,POST:()=>E});var n=r(884),s=r(6132),a=r(1040),i=r(4556),l=r(6718);r(7147),(0,l.config)({path:".env.local"});let c=process.env.SUPABASE_SERVICE_ROLE_KEY||"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlyY3loaGtvaXl6YXJ0bW12Ynh3Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczMzg1MjE3NCwiZXhwIjoyMDQ5NDI4MTc0fQ.q30mqGJAOJ-Bk-2_sMqfWWTTpvhjRVpJP6KBM3GzgDo",u=(0,i.eI)("https://irvyhhkoiyzartmmvbxw.supabase.co",c),p={APOLLO:process.env.APOLLO_API_KEY||"zX2Fv6Tnnaued23HQngLew",DEEPSEEK:process.env.DEEPSEEK_API_KEY||"sk-3e29503084eb4b09aaaa6aeff2d9eaef",GOOGLE_CALENDAR:process.env.GOOGLE_CALENDAR_CLIENT_ID||"66750848087-ei40fbubu5ll0q5f13p6p3aq21e4h3cd.apps.googleusercontent.com",AWS_LAMBDA:process.env.AWS_LAMBDA_KEY||"9wnj87aUNwkiah7AksidIoemoe02j48pwqj2JMsiMxsXOwaid9a28a2766aJw873bnS902jgtaYuwiPSiaKS92047ake73dwegepijnva8492178skdjhu942389UIOHf81320ryuh0oisfhnejqoSDHFGPQI4234298JFVSAOJF8203SDOPF23IORNMIWEJG820GWPENIGQ3NGPsxahguqrdh"};async function d(e,t=25){try{let r=await fetch("https://api.apollo.io/v1/mixed_people/search",{method:"POST",headers:{"Content-Type":"application/json","Cache-Control":"no-cache","X-Api-Key":p.APOLLO},body:JSON.stringify({q_person_titles:e.job_titles||["CEO","VP Sales","Director"],q_organization_locations:e.locations||["United States"],q_organization_num_employees_ranges:e.company_sizes||["11-50","51-200"],page_size:Math.min(t,25),person_locations:e.person_locations,q_organization_keywords:e.company_keywords})});if(!r.ok)throw Error(`Apollo API error: ${r.status}`);let o=await r.json(),n=o.people?.map(e=>({source:"apollo",cost:.35,first_name:e.first_name,last_name:e.last_name,email:e.email,phone:e.phone_numbers?.[0]?.sanitized_number,linkedin_url:e.linkedin_url,company_name:e.organization?.name,company_website:e.organization?.website_url,company_domain:function(e){if(!e)return null;try{let t=new URL(e.startsWith("http")?e:`https://${e}`).hostname;return t.replace("www.","")}catch{return null}}(e.organization?.website_url),industry:e.organization?.industry,company_size:e.organization?.estimated_num_employees,job_title:e.title,seniority_level:e.seniority,department:e.departments?.[0],lead_score:50,raw_data:e}))||[];for(let e=0;e<n.length;e++)n[e].lead_score=await h(n[e].raw_data);return n}catch(e){return console.error("Apollo lead generation error:",e),[]}}async function h(e){try{let t=`
Analyze this lead and give a score from 1-100 based on:
- Job title seniority
- Company size and industry
- Contact completeness
- Potential buying power

Lead data: ${JSON.stringify(e)}

Respond with just a number between 1-100.
`,r=await fetch("https://api.deepseek.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${p.DEEPSEEK}`},body:JSON.stringify({model:"deepseek-chat",messages:[{role:"user",content:t}],max_tokens:10,temperature:.1})});if(!r.ok)return console.error("Deepseek API error:",r.status),50;let o=await r.json(),n=o.choices?.[0]?.message?.content?.trim(),s=parseInt(n)||50;return Math.min(Math.max(s,1),100)}catch(e){return console.error("AI scoring error:",e),50}}async function g(e){try{let t=await fetch("https://your-lambda-url.amazonaws.com/process-lead",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${p.AWS_LAMBDA}`},body:JSON.stringify({lead:e,timestamp:new Date().toISOString()})});return await t.json()}catch(e){return console.error("Lambda processing error:",e),{success:!1,error:e.message}}}async function m(e,t,r=25){try{console.log("\uD83D\uDE80 Starting lead generation with your APIs...");let o=await _(e,r);if(!o.allowed)throw Error(`Lead limit exceeded: ${o.used}/${o.limit}`);console.log("\uD83D\uDCCA Generating leads from Apollo.io...");let n=await d(t,r);console.log("\uD83E\uDDE0 AI scoring with Deepseek...");let s=await Promise.all(n.map(async t=>({...t,user_id:e,lead_score:await h(t),created_at:new Date().toISOString()})));console.log("\uD83D\uDCBE Storing leads in database...");let{data:a,error:i}=await u.from("leads").insert(s).select();if(i)throw i;await f(e,a.length);let l=a.filter(e=>e.lead_score>=80);for(let e of l)await g(e);return{success:!0,leads:a,count:a.length,high_value_count:l.length,remaining_leads:o.limit-o.used-a.length,cost_breakdown:{apollo_cost:.35*a.length,ai_processing_cost:.05*a.length,total_cost:.4*a.length}}}catch(e){return console.error("Complete lead generation error:",e),{success:!1,error:e.message,leads:[],count:0}}}async function _(e,t){let{data:r}=await u.from("user_subscriptions").select(`
      leads_used_this_period,
      subscription_tiers (monthly_leads)
    `).eq("user_id",e).eq("status","active").single(),o=r?.subscription_tiers?.monthly_leads||0,n=r?.leads_used_this_period||0;return{allowed:n+t<=o,limit:o,used:n,remaining:o-n}}async function f(e,t){let{error:r}=await u.from("user_subscriptions").update({leads_used_this_period:u.raw(`leads_used_this_period + ${t}`)}).eq("user_id",e).eq("status","active");r&&console.error("Usage update error:",r)}var v=r(5798);async function E(e){try{let t=await e.json(),{user_id:r,criteria:o,count:n=25}=t;if(!r)return v.json({error:"User ID is required"},{status:400});if(!o||!o.job_titles||0===o.job_titles.length)return v.json({error:"At least one job title is required"},{status:400});if(n<1||n>1e3)return v.json({error:"Lead count must be between 1 and 1000"},{status:400});console.log(`🚀 Generating ${n} leads for user ${r}`);let s=await m(r,o,n);if(!s.success)return v.json({error:s.error||"Lead generation failed"},{status:500});return v.json({success:!0,message:`Successfully generated ${s.count} leads`,data:{leads_generated:s.count,high_value_leads:s.high_value_count,remaining_credits:s.remaining_leads,cost_breakdown:s.cost_breakdown,leads:s.leads.slice(0,5)}})}catch(e){return console.error("Lead generation API error:",e),v.json({error:"Internal server error",message:e.message},{status:500})}}async function D(e){return new v(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let y=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/leads/generate/route",pathname:"/api/leads/generate",filename:"route",bundlePath:"app/api/leads/generate/route"},resolvedPagePath:"/Users/rioallen/Documents/DropFly/knowledge-engine/leadfly-integration/app/api/leads/generate/route.js",nextConfigOutput:"",userland:o}),{requestAsyncStorage:w,staticGenerationAsyncStorage:b,serverHooks:O,headerHooks:I,staticGenerationBailout:N}=y,A="/api/leads/generate/route";function T(){return(0,a.patchFetch)({serverHooks:O,staticGenerationAsyncStorage:b})}},6718:(e,t,r)=>{let o=r(7147),n=r(1017),s=r(2037),a=r(6113),i=r(1564),l=i.version,c=["\uD83D\uDD10 encrypt with Dotenvx: https://dotenvx.com","\uD83D\uDD10 prevent committing .env to code: https://dotenvx.com/precommit","\uD83D\uDD10 prevent building .env in docker: https://dotenvx.com/prebuild","\uD83D\uDCE1 observe env with Radar: https://dotenvx.com/radar","\uD83D\uDCE1 auto-backup env with Radar: https://dotenvx.com/radar","\uD83D\uDCE1 version env with Radar: https://dotenvx.com/radar","\uD83D\uDEE0️  run anywhere with `dotenvx run -- yourcommand`","⚙️  specify custom .env file path with { path: '/custom/path/.env' }","⚙️  enable debug logging with { debug: true }","⚙️  override existing env vars with { override: true }","⚙️  suppress all logs with { quiet: true }","⚙️  write to custom object with { processEnv: myObject }","⚙️  load multiple .env files with { path: ['.env.local', '.env'] }"];function u(e){return"string"==typeof e?!["false","0","no","off",""].includes(e.toLowerCase()):!!e}let p=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function d(e){console.log(`[dotenv@${l}][DEBUG] ${e}`)}function h(e){console.log(`[dotenv@${l}] ${e}`)}function g(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function m(e){let t=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path))for(let r of e.path)o.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}else t=n.resolve(process.cwd(),".env.vault");return o.existsSync(t)?t:null}function _(e){return"~"===e[0]?n.join(s.homedir(),e.slice(1)):e}let f={configDotenv:function(e){let t;let r=n.resolve(process.cwd(),".env"),s="utf8",a=process.env;e&&null!=e.processEnv&&(a=e.processEnv);let i=u(a.DOTENV_CONFIG_DEBUG||e&&e.debug),l=u(a.DOTENV_CONFIG_QUIET||e&&e.quiet);e&&e.encoding?s=e.encoding:i&&d("No encoding is specified. UTF-8 is used by default");let p=[r];if(e&&e.path){if(Array.isArray(e.path))for(let t of(p=[],e.path))p.push(_(t));else p=[_(e.path)]}let g={};for(let r of p)try{let t=f.parse(o.readFileSync(r,{encoding:s}));f.populate(g,t,e)}catch(e){i&&d(`Failed to load ${r} ${e.message}`),t=e}let m=f.populate(a,g,e);if(i=u(a.DOTENV_CONFIG_DEBUG||i),l=u(a.DOTENV_CONFIG_QUIET||l),i||!l){var v;let e=Object.keys(m).length,r=[];for(let e of p)try{let t=n.relative(process.cwd(),e);r.push(t)}catch(r){i&&d(`Failed to load ${e} ${r.message}`),t=r}h(`injecting env (${e}) from ${r.join(",")} ${(v=`-- tip: ${c[Math.floor(Math.random()*c.length)]}`,process.stdout.isTTY?`\x1b[2m${v}\x1b[0m`:v)}`)}return t?{parsed:g,error:t}:{parsed:g}},_configVault:function(e){let t=u(process.env.DOTENV_CONFIG_DEBUG||e&&e.debug),r=u(process.env.DOTENV_CONFIG_QUIET||e&&e.quiet);(t||!r)&&h("Loading env from encrypted .env.vault");let o=f._parseVault(e),n=process.env;return e&&null!=e.processEnv&&(n=e.processEnv),f.populate(n,o,e),{parsed:o}},_parseVault:function(e){let t;e=e||{};let r=m(e);e.path=r;let o=f.configDotenv(e);if(!o.parsed){let e=Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);throw e.code="MISSING_DATA",e}let n=g(e).split(","),s=n.length;for(let e=0;e<s;e++)try{let r=n[e].trim(),s=function(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){let e=Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}let o=r.password;if(!o){let e=Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}let n=r.searchParams.get("environment");if(!n){let e=Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}let s=`DOTENV_VAULT_${n.toUpperCase()}`,a=e.parsed[s];if(!a){let e=Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:a,key:o}}(o,r);t=f.decrypt(s.ciphertext,s.key);break}catch(t){if(e+1>=s)throw t}return f.parse(t)},config:function(e){if(0===g(e).length)return f.configDotenv(e);let t=m(e);if(!t){var r;return r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.error(`[dotenv@${l}][WARN] ${r}`),f.configDotenv(e)}return f._configVault(e)},decrypt:function(e,t){let r=Buffer.from(t.slice(-64),"hex"),o=Buffer.from(e,"base64"),n=o.subarray(0,12),s=o.subarray(-16);o=o.subarray(12,-16);try{let e=a.createDecipheriv("aes-256-gcm",r,n);return e.setAuthTag(s),`${e.update(o)}${e.final()}`}catch(o){let e=o instanceof RangeError,t="Invalid key length"===o.message,r="Unsupported state or unable to authenticate data"===o.message;if(e||t){let e=Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){let e=Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw o}},parse:function(e){let t;let r={},o=e.toString();for(o=o.replace(/\r\n?/mg,"\n");null!=(t=p.exec(o));){let e=t[1],o=t[2]||"";o=o.trim();let n=o[0];o=o.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),'"'===n&&(o=(o=o.replace(/\\n/g,"\n")).replace(/\\r/g,"\r")),r[e]=o}return r},populate:function(e,t,r={}){let o=!!(r&&r.debug),n=!!(r&&r.override),s={};if("object"!=typeof t){let e=Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===n&&(e[r]=t[r],s[r]=t[r]),o&&(!0===n?d(`"${r}" is already defined and WAS overwritten`):d(`"${r}" is already defined and was NOT overwritten`))):(e[r]=t[r],s[r]=t[r]);return s}};e.exports.configDotenv=f.configDotenv,e.exports._configVault=f._configVault,e.exports._parseVault=f._parseVault,e.exports.config=f.config,e.exports.decrypt=f.decrypt,e.exports.parse=f.parse,e.exports.populate=f.populate,e.exports=f},1564:e=>{e.exports=JSON.parse('{"name":"dotenv","version":"17.2.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[271,228],()=>r(9256));module.exports=o})();